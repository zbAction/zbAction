TODO:
	Write docs. - board owners done
	Make homepage
	Setup support forum

	Need to setup DB on production server.

	Black magic can possibly be fixed by implementing read receipts

	ICON FONTS: http://fontello.com/

	--------------------------------------
	BACK BURNER:

	On modification submission automatically check for matching keys
	in manifest.json and whatever JS file they are using.

	Need to add more rows to the mods table (author, directory)

	Each time a modification is submitted the manifest will be read
	and a new version directory (eg: andrew/111-222-333/1.0.0/poke.js)
	will be created. The format will be:
		- {author}/{mod_key}/{version}/{script_file}
	--------------------------------------

	DONE: Need to implement Mod model and API key checks.
	DONE: Replace urllib2 with http://docs.python-requests.org/en/latest/
	DONE:
	```
	import urllib2
	opener = urllib2.build_opener()
	opener.addheaders = [('User-agent', 'Mozilla/5.0')]
	opener.open(some_website).read()
	```
	Use to bypass cloudflare no user-agent check.

	DONE:
	http://www.crummy.com/software/BeautifulSoup/bs4/doc/
	Use BeautifulSoup for forum scraping

	DONE:
	Write forum scraper to scrape current users/uids on a forum.
	\$\.zb\.stat={[^}]+bpath:(\d+)[^}]+};

	DONE:
	http://docs.zetaboards.com/themes/preset_js_variables
	$.zb.bpath is a unique identifier for a board. We should scrape this
	too for identification purposes.

	DONE:
	Use bulk insert mappings for rapid insertion of new user rows:
		http://docs.sqlalchemy.org/en/latest/_modules/examples/performance/bulk_inserts.html
	Another possibility is to use SQLAlchemy core and execute raw SQL. If the user exists then
	we will update their information and if they don't they we will insert.

	DONE:
	Registration Steps:
		Category
			BO:
				Board URL
				Scrape
				Password
			Dev:
				Password

	DONE: User login.
	DONE: Modification management.
	DONE: Edit board URL.

zb_sync should be the websocket handler and should only:
	- receive actions
	- process actions
	- enqueue responses
	- read from DB any notifications not seen

zb_sync_store should:
	- dequeue from the response queue and insert into a DB

Other Notes:
	- boards will eventually need to register in order
	to verify send/receive destination/origin

	- all timestamps will be recorded in UTC however
	they will be presented in the user's timezone

	- on connect, if a user's name has changed then update the db
	- issue a user list refresh for the board

	- users will be identified by their access key. names will be mapped
	based on access key.

	- send templates will have receive attr but not source

	- receive templates will have source attr but not receive

	- Mod key "0" is the dev mod key and should only be used
	for official system communication (such as handshakes)

	- Action events are restricted to be 255 characters long
	INCLUDING THE MOD KEY PLUS THE SEPARATING PERIOD so 254
	characters excluding the separator but including the mod key

	- Action details are restricted to 10,000 characters long

User Action Relationships:
	Actions have a corresponding source and receiver.

	The receiver will be enqueued with an action whose
	receiver attribute is him/herself.

Authentication:
	Forums and users will have authentication keys.
	2-factor authentication

	On page load if a user is logged in handshake with the server
	and attempt to get the auth key from it.

	If the user is not in the system create a key for them.

	system level queries should use 0 for api keys

DB Scheme:
	Forums Table:
		id (unique primary key)
		access_key (unique key)
		bare_location (like s1.zetaboards.com/outline for outline)
		mod_keys (string containing space delimited keys for modification access)

	Users Table:
		id (unique primary key)
		access_key (unique key)
		board_key (relates to forums table)
		uid
		name

	Actions Table:
		id (unique primary key)
		timestamp
		event
		details
		source (relates to users table)
		receiver (relates to users table)
		seen (boolean defaults to false)

	Mods Table:
		id (unique primary key)
		api_key (unique key)
		author
		enabled
